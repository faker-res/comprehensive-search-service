<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="la.niub.abcapi.servicecompre.dao.marketprice.ISecPriceTimeDao">
    <resultMap id="BaseResultMap" type="la.niub.abcapi.servicecompre.model.SecPriceTimeModel">
        <constructor>
            <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="sec_uni_code" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="sec_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="trade_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="open" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
            <arg column="avg_price" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
            <arg column="differ" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
            <arg column="differ_range" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
            <arg column="volume" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
            <arg column="amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
            <arg column="turn" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
            <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, sec_uni_code, sec_code, trade_date, open, avg_price, differ, differ_range, volume, 
    amount, turn, update_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sec_price_time
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sec_price_time
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="la.niub.abcapi.servicecompre.model.SecPriceTimeModel">
    insert into sec_price_time (id, sec_uni_code, sec_code, 
      trade_date, open, avg_price, 
      differ, differ_range, volume, 
      amount, turn, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{sec_uni_code,jdbcType=BIGINT}, #{sec_code,jdbcType=VARCHAR}, 
      #{trade_date,jdbcType=TIMESTAMP}, #{open,jdbcType=DECIMAL}, #{avg_price,jdbcType=DECIMAL}, 
      #{differ,jdbcType=DECIMAL}, #{differ_range,jdbcType=DECIMAL}, #{volume,jdbcType=DECIMAL}, 
      #{amount,jdbcType=DECIMAL}, #{turn,jdbcType=DECIMAL}, #{update_time,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="la.niub.abcapi.servicecompre.model.SecPriceTimeModel">
        insert into sec_price_time
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="sec_uni_code != null">
                sec_uni_code,
            </if>
            <if test="sec_code != null">
                sec_code,
            </if>
            <if test="trade_date != null">
                trade_date,
            </if>
            <if test="open != null">
                open,
            </if>
            <if test="avg_price != null">
                avg_price,
            </if>
            <if test="differ != null">
                differ,
            </if>
            <if test="differ_range != null">
                differ_range,
            </if>
            <if test="volume != null">
                volume,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="turn != null">
                turn,
            </if>
            <if test="update_time != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="sec_uni_code != null">
                #{sec_uni_code,jdbcType=BIGINT},
            </if>
            <if test="sec_code != null">
                #{sec_code,jdbcType=VARCHAR},
            </if>
            <if test="trade_date != null">
                #{trade_date,jdbcType=TIMESTAMP},
            </if>
            <if test="open != null">
                #{open,jdbcType=DECIMAL},
            </if>
            <if test="avg_price != null">
                #{avg_price,jdbcType=DECIMAL},
            </if>
            <if test="differ != null">
                #{differ,jdbcType=DECIMAL},
            </if>
            <if test="differ_range != null">
                #{differ_range,jdbcType=DECIMAL},
            </if>
            <if test="volume != null">
                #{volume,jdbcType=DECIMAL},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="turn != null">
                #{turn,jdbcType=DECIMAL},
            </if>
            <if test="update_time != null">
                #{update_time,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="la.niub.abcapi.servicecompre.model.SecPriceTimeModel">
        update sec_price_time
        <set>
            <if test="sec_uni_code != null">
                sec_uni_code = #{sec_uni_code,jdbcType=BIGINT},
            </if>
            <if test="sec_code != null">
                sec_code = #{sec_code,jdbcType=VARCHAR},
            </if>
            <if test="trade_date != null">
                trade_date = #{trade_date,jdbcType=TIMESTAMP},
            </if>
            <if test="open != null">
                open = #{open,jdbcType=DECIMAL},
            </if>
            <if test="avg_price != null">
                avg_price = #{avg_price,jdbcType=DECIMAL},
            </if>
            <if test="differ != null">
                differ = #{differ,jdbcType=DECIMAL},
            </if>
            <if test="differ_range != null">
                differ_range = #{differ_range,jdbcType=DECIMAL},
            </if>
            <if test="volume != null">
                volume = #{volume,jdbcType=DECIMAL},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="turn != null">
                turn = #{turn,jdbcType=DECIMAL},
            </if>
            <if test="update_time != null">
                update_time = #{update_time,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="la.niub.abcapi.servicecompre.model.SecPriceTimeModel">
    update sec_price_time
    set sec_uni_code = #{sec_uni_code,jdbcType=BIGINT},
      sec_code = #{sec_code,jdbcType=VARCHAR},
      trade_date = #{trade_date,jdbcType=TIMESTAMP},
      open = #{open,jdbcType=DECIMAL},
      avg_price = #{avg_price,jdbcType=DECIMAL},
      differ = #{differ,jdbcType=DECIMAL},
      differ_range = #{differ_range,jdbcType=DECIMAL},
      volume = #{volume,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=DECIMAL},
      turn = #{turn,jdbcType=DECIMAL},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="getLastTradeDate" resultType="java.util.Date">
    select max(trade_date) from sec_price_time
  </select>
    <select id="selectMostRisk" resultMap="BaseResultMap">
        select * from
        (select * from
        (select
        <include refid="Base_Column_List"/>
        from sec_price_time
        where sec_code in
        <foreach collection="secCodes" item="item" index="index"
                 open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
        and trade_date>#{startTime,jdbcType=TIMESTAMP} order by trade_date desc)
        as a group by sec_code) as b
        where differ_range>0
        order by differ_range desc
        limit #{limit,jdbcType=INTEGER};
    </select>
    <select id="selectMostFall" resultMap="BaseResultMap">
        select * from
        (select * from
        (select
        <include refid="Base_Column_List"/>
        from sec_price_time
        where sec_code in
        <foreach collection="secCodes" item="item" index="index"
                 open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
        and trade_date>#{startTime,jdbcType=TIMESTAMP} order by trade_date desc)
        as a group by sec_code) as b
        where differ_range&lt;0
        order by differ_range asc
        limit #{limit,jdbcType=INTEGER};
    </select>
</mapper>